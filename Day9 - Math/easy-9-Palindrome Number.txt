Palindrome Number


Description: 

Determine whether an integer is a palindrome. An integer is a palindrome when it reads the same backward as forward.

Example 1:

Input: 121
Output: true
Example 2:

Input: -121
Output: false
Explanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.
Example 3:

Input: 10
Output: false
Explanation: Reads 01 from right to left. Therefore it is not a palindrome.
Follow up:

Coud you solve it without converting the integer to a string?





Solution:

不让用string来做，那么直接对数字进行倒序，负数肯定不符合要求，只排序非负数，先对数字取余，余数用来重构倒序数（原倒序数*10+余数即可），然后把数字中的最后一位移除掉（除10），继续取余直到0为止。





Code:

class Solution:
    def isPalindrome(self, x: int) -> bool:
        if x<0: return False
        
        origin = x
        reverse = 0
        
        while x > 0:
            y = x%10
            x = x//10
            reverse = reverse*10 + y
        
        if reverse == origin:
            return True
        else:
            return False
