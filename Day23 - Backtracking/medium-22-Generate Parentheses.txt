Generate Parentheses


Description: 

Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.

For example, given n = 3, a solution set is:

[
  "((()))",
  "(()())",
  "(())()",
  "()(())",
  "()()()"
]





Solution:

参考答案，只有在知道序列仍然保持有效时才能添加'('或者')'，可以通过跟踪到目前为止放置的左括号和右括号的数目来做，如果还剩一个位置，可以开始放一个左括号，如果不超过左括号的数量，可以放一个右括号。





Code:

class Solution:
    def generateParenthesis(self, n: int) -> List[str]:
        if not n: return []
        output = []
        # recursively generate all valid combinations
        def generate(left, right, current=''):
            # invalid state... prunning
            if right < left: return
            # match, we are done here
            if not left and not right: output.append(current)
            # base case: return
            if not 0 <= left or not 0 <= right: return
            # try all possible insertions
            generate(left-1, right, current+'(')
            generate(left, right-1, current+')')
        generate(left=n, right=n)
        return output