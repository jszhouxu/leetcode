Container With Most Water    


Description: 

Given n non-negative integers a1, a2, ..., an , where each represents a point at coordinate (i, ai). n vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0). Find two lines, which together with x-axis forms a container, such that the container contains the most water.

Note: You may not slant the container and n is at least 2.

Example:

Input: [1,8,6,2,5,4,8,3,7]
Output: 49





Solution:

左右两端双指针各自向对方靠拢，因为面积取决于最短的那条边，所以每次动的指针为对应高度较小的那个，每次动完后重新计算maximum_area，和现存的比较，如大于，就替换掉，否则不变。最后返回maximum_area。





Code:

class Solution:
    def maxArea(self, height: List[int]) -> int:
        left = 0
        right = len(height)-1
        max_area = 0
        while left != right:
            max_area = max([max_area,min(height[left],height[right])*(right-left)])
            if height[left] < height[right]:
                left = left + 1
            else:
                right = right - 1
        return max_area
