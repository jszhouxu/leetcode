Repeated DNA Sequences


Description: 

All DNA is composed of a series of nucleotides abbreviated as A, C, G, and T, for example: "ACGAATTCCG". When studying DNA, it is sometimes useful to identify repeated sequences within the DNA.

Write a function to find all the 10-letter-long sequences (substrings) that occur more than once in a DNA molecule.

Example:

Input: s = "AAAAACCCCCAAAAACCCCCCAAAAAGGGTTT"

Output: ["AAAAACCCCC", "CCCCCAAAAA"]





Solution:

用两个set，一个记录重复出现的sequence，一个记录出现过的sequence，遍历整个字符串，每次取10个字符，如果以前出现过，记录到重复出现的set中，否则加入记录的set中，返回重复出现的set即可。





Code:

class Solution:
    def findRepeatedDnaSequences(self, s: str) -> List[str]:
        repeated, recorded = set(), set()
        for i in range(len(s)-9):
            substring = s[i:i+10]
            if substring in recorded: repeated.add(substring)
            else: recorded.add(substring)
        return list(repeated)