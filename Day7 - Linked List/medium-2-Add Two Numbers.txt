Add Two Numbers


Description: 

You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.

You may assume the two numbers do not contain any leading zero, except the number 0 itself.

Example:

Input: (2 -> 4 -> 3) + (5 -> 6 -> 4)
Output: 7 -> 0 -> 8
Explanation: 342 + 465 = 807.





Solution:

逐位带进位（第一个进位为0）相加，如果该位不存在，则加0。每位加完后余数保存，商作为下一个进位即可。





Code:

class Solution:
    def addTwoNumbers(self, l1: ListNode, l2: ListNode) -> ListNode:
        head = cur = ListNode(None)
        c = 0
        while l1 or l2 or c != 0:
            if l1:
                c += l1.val
                l1 = l1.next
            if l2:
                c += l2.val
                l2 = l2.next
            cur.next = ListNode(c%10)
            cur = cur.next
            c = c//10
        return head.next