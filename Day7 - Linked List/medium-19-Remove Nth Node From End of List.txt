Remove Nth Node From End of List


Description: 

Given a linked list, remove the n-th node from the end of list and return its head.

Example:

Given linked list: 1->2->3->4->5, and n = 2.

After removing the second node from the end, the linked list becomes 1->2->3->5.
Note:

Given n will always be valid.

Follow up:

Could you do this in one pass?




Solution:

设置两个指针，第一个指针先向前走n步，如果到达链表尾端，说明需要移除的是第一个数，移除（输出head.next即可），如果链表还没到底，第二个指针和第一个指针同时向尾部移动，直到第一个指针到达尾部，移除第二个指针指向的后面一个元素即可。





Code:

class Solution:
    def removeNthFromEnd(self, head: ListNode, n: int) -> ListNode:
        if head.next == None:
            return None
        first = second = head
        for _ in range(n):
            first = first.next
        if not first:
            return head.next
        while first.next:
            first = first.next
            second = second.next
        second.next = second.next.next
        return head
        