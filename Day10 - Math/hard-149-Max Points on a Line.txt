Max Points on a Line


Description: 

Given n points on a 2D plane, find the maximum number of points that lie on the same straight line.

Example 1:

Input: [[1,1],[2,2],[3,3]]
Output: 3
Explanation:
^
|
|        o
|     o
|  o  
+------------->
0  1  2  3  4
Example 2:

Input: [[1,1],[3,2],[5,3],[4,1],[2,3],[1,4]]
Output: 4
Explanation:
^
|
|  o
|     o        o
|        o
|  o        o
+------------------->
0  1  2  3  4  5  6
NOTE: input types have been changed on April 15, 2019. Please reset to default code definition to get new method signature.






Solution:

这题不会做，看了答案。
当平面上确定一个点后，平面上的其他点都和这个点可以求出一个斜率，斜率相同的点就意味着在同一条直线上。所以我们可以用哈希表去计数，斜率作为key。相同的key就在同一条直线上，计数。遍历完所有空间点即可。
斜率为小数的情况用分数去表示，求分子分母的最大公约数，然后约分，分子分母作为 key 即可。还有一个特殊情况，就是可能存在0的情况，这个可以用单独变量来存储重复点个数，重复点一定是过当前点的直线的。





Code:

L, M, gcd = len(points), 1, math.gcd
        for i,(x1,y1) in enumerate(points):
            s, D = 1, collections.defaultdict(int, {0:0})
            for (x2,y2) in points[i+1:]:
                g = gcd(y2-y1, x2-x1)
                if g == 0:
                    s += 1
                    continue
                m = ((y2-y1)//g, (x2-x1)//g)
                if m[1] == 0: m = (1,0)
                if m[1] < 0: m = (-m[0],-m[1])
                D[m] += 1
            M = max(M, s + max(D.values()))
        return M if points else 0