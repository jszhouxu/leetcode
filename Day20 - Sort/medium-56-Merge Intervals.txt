Merge Intervals


Description: 

Given a collection of intervals, merge all overlapping intervals.

Example 1:

Input: [[1,3],[2,6],[8,10],[15,18]]
Output: [[1,6],[8,10],[15,18]]
Explanation: Since intervals [1,3] and [2,6] overlaps, merge them into [1,6].
Example 2:

Input: [[1,4],[4,5]]
Output: [[1,5]]
Explanation: Intervals [1,4] and [4,5] are considered overlapping.
NOTE: input types have been changed on April 15, 2019. Please reset to default code definition to get new method signature.





Solution:

首先对整个数列进行排序，取左右两个指针，遍历整个数列的interval，如果右指针小于当前interval的左极限，那么存入result数组，把该左极限赋给左指针，否则右指针取之前右指针和当前interval的右极限的最大值。




Code:

class Solution:
    def merge(self, intervals: List[List[int]]) -> List[List[int]]:
        if len(intervals) is 0:
            return []
        
        intervals.sort(key=lambda x:x[0])
        
        left = intervals[0][0]
        right = intervals[0][1]
        
        res = []
        for x,y in intervals:
            if right < x:
                res.append([left, right])
                left = x
            
            right = max(right, y)
            
        res.append([left, right])
        return res