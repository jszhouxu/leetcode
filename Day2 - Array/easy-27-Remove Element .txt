Remove Element    


Description: 

Given an array nums and a value val, remove all instances of that value in-place and return the new length.

Do not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory.

The order of elements can be changed. It doesn't matter what you leave beyond the new length.

Example 1:

Given nums = [3,2,2,3], val = 3,

Your function should return length = 2, with the first two elements of nums being 2.

It doesn't matter what you leave beyond the returned length.
Example 2:

Given nums = [0,1,2,2,3,0,4,2], val = 2,

Your function should return length = 5, with the first five elements of nums containing 0, 1, 3, 0, and 4.

Note that the order of those five elements can be arbitrary.

It doesn't matter what values are set beyond the returned length.





Solution:

双指针，ind2遍历整个数组，如碰到等于val的数组值，ind2进行加1操作后跳过，否则将ind2指向的当前数组值赋予ind1指向的位置，ind1和ind2各加1后继续。最后返回ind1。





Code:

class Solution:
    def removeElement(self, nums: List[int], val: int) -> int:
        ind1,ind2 = 0, 0
        while(ind2<len(nums)):
            if nums[ind2] == val:
                ind2 += 1
            else:
                nums[ind1] = nums[ind2]
                ind1 += 1
                ind2 += 1
        return ind1