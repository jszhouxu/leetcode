Pow(x, n)


Description: 

Implement pow(x, n), which calculates x raised to the power n (xn).

Example 1:

Input: 2.00000, 10
Output: 1024.00000
Example 2:

Input: 2.10000, 3
Output: 9.26100
Example 3:

Input: 2.00000, -2
Output: 0.25000
Explanation: 2-2 = 1/22 = 1/4 = 0.25
Note:

-100.0 < x < 100.0
n is a 32-bit signed integer, within the range [−231, 231 − 1]





Solution:

自我递归调用，如果n是0，返回1，如果n是1，返回x，不然就把n除以2再调用myPow（一直调用到0和1的case）。调用的结果乘以现有的result，如果n为奇数，再额外乘以一个x，返回result即可。注意如果n<0，那么可以把n转为-n，x转为1/x来做。




Code:

class Solution:
    def myPow(self, x: float, n: int) -> float:
        def helper(x,n):
            if n == 0:
                return 1
            if n == 1:
                return x
            res = self.myPow(x,n//2)
            res *= res
            if n % 2 == 1:
                res *= x
            return res
        
        if n<0:
            n = -n
            x = 1/x
        return helper(x,n)
                
        